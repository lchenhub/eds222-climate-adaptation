colnames(merged)[colnames(merged) == "geo_id.x"] <- "geo_id"
colnames(merged)[colnames(merged) == "state.x"] <- "state"
colnames(merged)[colnames(merged) == "latitutde"] <- "latitude"
income_readiness <- merged[, c("city", "state", "geo_id", "percent_of_population_spending_over_50_percent_of_income_on_rent_2015", "percent_of_population_in_poverty_2015", "latitude", "longitude", "county", "region", "median_income", "overall_readiness")]
#create scatterplot to understand information
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(size=3) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness for Climate Adapatation",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
# Compute the correlation coefficient to quantify the strength and direction of the relationship
cor(income_readiness$percent_of_population_in_poverty_2015, income_readiness$overall_readiness)
# Linear regression model
linear_regression <- lm(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
# Summary of the model
summary(linear_regression)
ggplot(data=linear_regression, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, linewidth=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, size=1.5) +
theme_bw() +
labs(title = "Regression line overlaid on scatter plot",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
# Hypothesis testing
summary(linear_regression)$coefficients
knitr::opts_chunk$set(echo = TRUE)
# Load all the packages needed here
library(tidyverse)
library(readr)
library(gt)
library(tufte)
library(sf)
library(feasts)
library(dplyr)
library(janitor)
# Set the filepath here
rootdir <- ("/Users/lianechen/Documents/MEDS_2023/Fall_2023/EDS222/Final/eds222-climateadapt")
datadir <- file.path(rootdir,"data")
# Import data
city_indicators <- read.csv("data/City Indicators.csv")
readiness <- read.csv("data/Overall Risk & Readiness Scores.csv")
# Clean column names for both datasets
city_indicators <- clean_names(city_indicators)
readiness <- clean_names(readiness)
# Explore data
nrow(city_indicators)
nrow(readiness)
colnames(merged)[colnames(merged) == "geo_id.x"] <- "geo_id"
merged <- merge(city_indicators, readiness, by = "city", all = TRUE)
nrow(merged)
colnames(merged)[colnames(merged) == "geo_id.x"] <- "geo_id"
colnames(merged)[colnames(merged) == "state.x"] <- "state"
colnames(merged)[colnames(merged) == "latitutde"] <- "latitude"
income_readiness <- merged[, c("city", "state", "geo_id", "percent_of_population_spending_over_50_percent_of_income_on_rent_2015", "percent_of_population_in_poverty_2015", "latitude", "longitude", "county", "region", "median_income", "overall_readiness")]
#create scatterplot to understand information
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(size=3) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness for Climate Adapatation",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
# Compute the correlation coefficient to quantify the strength and direction of the relationship
cor(income_readiness$percent_of_population_in_poverty_2015, income_readiness$overall_readiness)
# Linear regression model
linear_regression <- lm(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
# Summary of the model
summary(linear_regression)
# Linear regression model
linear_regression <- lm(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
# Summary of the model
summary(linear_regression)
knitr::opts_chunk$set(echo = TRUE)
# Load all the packages needed here
library(tidyverse)
library(readr)
library(gt)
library(tufte)
library(feasts)
library(dplyr)
library(ggplot2)
# Set your filepath here! Or, set this up as an .Rproj if you'd like.
rootdir <- ("/Users/lianechen/Documents/MEDS_2023/Fall_2023/EDS222")
setwd(file.path(rootdir,"Assignments","assignment-04-lchenhub"))
# load the US State Facts and Figures dataset
US_state_facts <- as.data.frame(state.x77)
# load the state.region dataset to see regional data
region <- as.data.frame(state.region)
#append the two datasets above together
states <- add_column(US_state_facts, Region = region$state.region)
#compute mean and standard deviation
states %>%
group_by(Region) %>%
summarize(
Mean = mean(Frost, na.rm = TRUE),
StdDev = sd(Frost, na.rm = TRUE)
)
#b. compute point estimate
mu_NorthCentral = states %>%
filter(Region == "North Central") %>%
summarize(mean(Frost))
mu_South = states %>%
filter(Region == "South") %>%
summarize(mean(Frost))
point_est = as.numeric(mu_NorthCentral - mu_South)
print(point_est)  #74.20833
# c(i). compute standard error
n1 = states %>% filter(Region == "North Central") %>% count()
n2 = states %>% filter(Region == "South") %>% count()
s1 = states %>% filter(Region == "North Central") %>% summarize(sd(Frost, na.rm = TRUE))
s2 = states %>% filter(Region == "South") %>% summarize(sd(Frost, na.rm = TRUE))
SE = as.numeric(sqrt(s1^2/n1 + s2^2/n2))
print(SE)
# c(ii) compute test statistic
zscore = (point_est - 0)/SE
print(zscore)
#d, compute p-value
p_value <- 2 * pt(7.113401, 26, lower.tail=FALSE)
p_value
#use point estimate + 1.96 âˆ— SE to compute a 95% confidence interval aroundpoint estimate
max <- point_est + 1.96 * SE
min <- point_est - 1.96 * SE
cat("95% confidence interval: [", min, ",", max, "]\n")
# repeat hypothesis test using t.test() function
two_tailed <- t.test(states$Frost[states$Region=="North Central"], states$Frost[states$Region=="South"])
two_tailed
#conduct one-tailed t-test
one_tailed <- t.test(states$Frost[states$Region=="North Central"] - states$Frost[states$Region=="South"])
one_tailed
#run linear regression
linear_model <- summary(lm(Murder ~ Frost, US_state_facts))
critical_value <- qnorm(0.025, lower.tail = FALSE)
CI_upper <- linear_model$coefficients["Frost", "Estimate"] + (critical_value * linear_model$coefficients["Frost", "Std. Error"])
CI_lower <- linear_model$coefficients["Frost", "Estimate"] - (critical_value * linear_model$coefficients["Frost", "Std. Error"])
print(paste0("95% confidence interval is [", CI_lower, ",", CI_upper, "]"))
#conduct 95% confidence interval
linear_model <- summary(lm(Murder ~ Frost, US_state_facts))
critical_value_2 <- qnorm(0.05, lower.tail = FALSE)
CI_upper_2 <- linear_model$coefficients["Frost", "Estimate"] + (critical_value_2 * linear_model$coefficients["Frost", "Std. Error"])
CI_lower_2 <- linear_model$coefficients["Frost", "Estimate"] - (critical_value_2 * linear_model$coefficients["Frost", "Std. Error"])
print(paste0("95% confidence interval is [", CI_lower_2, ",", CI_upper_2, "]"))
# Calculate the confidence interval for the slope coefficient at 90% confidence level
linear_model <- summary(lm(Murder ~ Frost, US_state_facts))
critical_value_3 <- qnorm(0.10, lower.tail = FALSE)
CI_upper_3 <- linear_model$coefficients["Frost", "Estimate"] + (critical_value_3 * linear_model$coefficients["Frost", "Std. Error"])
CI_lower_3 <- linear_model$coefficients["Frost", "Estimate"] - (critical_value_3 * linear_model$coefficients["Frost", "Std. Error"])
print(paste0("90% confidence interval is [", CI_lower_3, ",", CI_upper_3, "]"))
#load the dataset and transform into tsibble
monthly_deaths <- datasets::mdeaths
monthly_deaths <- as_tsibble(monthly_deaths)
monthly_deaths
#make time series plot
monthly_deaths %>%
autoplot(vars = NULL, color = 'orange') +
theme_bw() +
labs(x = "Months",
y = "Deaths",
title = "Monthly deaths between 1974-1979")
#monthly_deaths <- as_tibble(monthly_deaths)
monthly_deaths %>%
model(classical_decomposition(value, type = "additive")) %>%
components() %>%
autoplot() +
labs(x = "year", y = "Number of deaths", title = "Classical decomposition of monthly male lung disease related deaths") +
theme_minimal()
acf(monthly_deaths, lag.max = 12)
View(income_readiness)
View(income_readiness)
# compute point estimate
pt_est_poverty_west = income_readiness %>%
filter(region == "West") %>%
summarize(mean(percent_of_population_in_poverty_2015))
pt_est_poverty_south = income_readiness %>%
filter(region == "South") %>%
summarize(mean(percent_of_population_in_poverty_2015))
point_est = as.numeric(pt_est_poverty_west - pt_est_poverty_south)
print(point_est)
# compute standard error
n1 = income_readiness %>% filter(region == "West") %>% count()
n2 = income_readiness %>% filter(region == "South") %>% count()
s1 = income_readiness %>% filter(region == "West") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
s2 = income_readiness %>% filter(region == "South") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
SE = as.numeric(sqrt(s1^2/n1 + s2^2/n2))
print(SE)
# compute test statistic
zscore = (point_est - 0)/SE
print(zscore)
#t-test
t.test(income_readiness ~ percent_of_population_in_poverty, data = income_readiness)
#t-test
t.test(income_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
#t-test
t.test(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
#t-test
t.test(overall_readiness, percent_of_population_in_poverty_2015, data = income_readiness)
#t-test
t.test(overall_readiness,percent_of_population_in_poverty_2015, data = income_readiness)
#t-test
t.test(overall_readiness,percent_of_population_in_poverty_2015, data = income_readiness, paired=T)
#t-test
t.test(overall_readiness , percent_of_population_in_poverty_2015, data = income_readiness, paired=T)
#t-test
t.test(overall_readiness, percent_of_population_in_poverty_2015, data = income_readiness, paired=T)
#t-test
t.test(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
two_tailed <- t.test(income_readiness$overall_readiness[income_readiness$region=="West"], overall_readiness[income_readiness$region=="South"])
two_tailed <- t.test(income_readiness$overall_readiness[income_readiness$region=="West"], income_readiness$overall_readiness[income_readiness$region=="South"])
two_tailed
library(ggplot2)
# plot a histogram using ggplot
ggplot(income_readiness, aes(x=percent_of_population_in_poverty_2015, fill=overall_readiness, color=overall_readiness)) +
geom_histogram(position="identity")
knitr::opts_chunk$set(echo = TRUE)
# Load all the packages needed here
library(tidyverse)
library(readr)
library(gt)
library(tufte)
library(sf)
library(feasts)
library(dplyr)
library(janitor)
library(ggplot2)
# Set the filepath here
rootdir <- ("/Users/lianechen/Documents/MEDS_2023/Fall_2023/EDS222/Final/eds222-climateadapt")
datadir <- file.path(rootdir,"data")
# Import data
city_indicators <- read.csv("data/City Indicators.csv")
readiness <- read.csv("data/Overall Risk & Readiness Scores.csv")
# Clean column names for both datasets
city_indicators <- clean_names(city_indicators)
readiness <- clean_names(readiness)
# Explore data
nrow(city_indicators)
nrow(readiness)
merged <- merge(city_indicators, readiness, by = "city", all = TRUE)
nrow(merged)
colnames(merged)[colnames(merged) == "geo_id.x"] <- "geo_id"
colnames(merged)[colnames(merged) == "state.x"] <- "state"
colnames(merged)[colnames(merged) == "latitutde"] <- "latitude"
income_readiness <- merged[, c("city", "state", "geo_id", "percent_of_population_spending_over_50_percent_of_income_on_rent_2015", "percent_of_population_in_poverty_2015", "latitude", "longitude", "county", "region", "median_income", "overall_readiness")]
#create scatterplot to understand information
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(size=3) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness for Climate Adapatation",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
# Compute the correlation coefficient to quantify the strength and direction of the relationship
cor(income_readiness$percent_of_population_in_poverty_2015, income_readiness$overall_readiness)
# Linear regression model
linear_regression <- lm(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
# Summary of the model
summary(linear_regression)
# compute point estimate
pt_est_poverty_west = income_readiness %>%
filter(region == "West") %>%
summarize(mean(percent_of_population_in_poverty_2015))
pt_est_poverty_south = income_readiness %>%
filter(region == "South") %>%
summarize(mean(percent_of_population_in_poverty_2015))
point_est = as.numeric(pt_est_poverty_west - pt_est_poverty_south)
print(point_est)
# compute standard error
n1 = income_readiness %>% filter(region == "West") %>% count()
n2 = income_readiness %>% filter(region == "South") %>% count()
s1 = income_readiness %>% filter(region == "West") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
s2 = income_readiness %>% filter(region == "South") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
SE = as.numeric(sqrt(s1^2/n1 + s2^2/n2))
print(SE)
# compute test statistic
zscore = (point_est - 0)/SE
print(zscore)
#t-test
t.test(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
two_tailed <- t.test(income_readiness$overall_readiness[income_readiness$region=="West"], income_readiness$overall_readiness[income_readiness$region=="South"])
two_tailed
ggplot(data=linear_regression, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, linewidth=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, size=1.5) +
theme_bw() +
labs(title = "Regression line overlaid on scatter plot",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
qqline(income_readiness$overall_readiness)
View(income_readiness)
knitr::opts_chunk$set(echo = TRUE)
# Load all the packages needed here
library(tidyverse)
library(readr)
library(gt)
library(tufte)
library(sf)
library(feasts)
library(dplyr)
library(janitor)
library(ggplot2)
# Set the filepath here
rootdir <- ("/Users/lianechen/Documents/MEDS_2023/Fall_2023/EDS222/Final/eds222-climateadapt")
datadir <- file.path(rootdir,"data")
# Import data
city_indicators <- read.csv("data/City Indicators.csv")
readiness <- read.csv("data/Overall Risk & Readiness Scores.csv")
# Clean column names for both datasets
city_indicators <- clean_names(city_indicators)
readiness <- clean_names(readiness)
# Explore data
nrow(city_indicators)
nrow(readiness)
merged <- merge(city_indicators, readiness, by = "city", all = TRUE)
nrow(merged)
colnames(merged)[colnames(merged) == "geo_id.x"] <- "geo_id"
colnames(merged)[colnames(merged) == "state.x"] <- "state"
colnames(merged)[colnames(merged) == "latitutde"] <- "latitude"
income_readiness <- merged[, c("city", "state", "geo_id", "percent_of_population_spending_over_50_percent_of_income_on_rent_2015", "percent_of_population_in_poverty_2015", "latitude", "longitude", "county", "region", "median_income", "overall_readiness")]
#create scatterplot to understand information
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(size=3) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness for Climate Adapatation",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
# Compute the correlation coefficient to quantify the strength and direction of the relationship
cor(income_readiness$percent_of_population_in_poverty_2015, income_readiness$overall_readiness)
# Linear regression model
linear_regression <- lm(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
# Summary of the model
summary(linear_regression)
# compute point estimate
pt_est_poverty_west = income_readiness %>%
filter(region == "West") %>%
summarize(mean(percent_of_population_in_poverty_2015))
pt_est_poverty_south = income_readiness %>%
filter(region == "South") %>%
summarize(mean(percent_of_population_in_poverty_2015))
point_est = as.numeric(pt_est_poverty_west - pt_est_poverty_south)
print(point_est)
# compute standard error
n1 = income_readiness %>% filter(region == "West") %>% count()
n2 = income_readiness %>% filter(region == "South") %>% count()
s1 = income_readiness %>% filter(region == "West") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
s2 = income_readiness %>% filter(region == "South") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
SE = as.numeric(sqrt(s1^2/n1 + s2^2/n2))
print(SE)
# compute test statistic
zscore = (point_est - 0)/SE
print(zscore)
#t-test
t.test(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
ggplot(data=linear_regression, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, linewidth=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, size=1.5) +
theme_bw() +
labs(title = "Regression line overlaid on scatter plot",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, linewidth=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, size=1.5) +
theme_bw() +
labs(title = "Regression line overlaid on scatter plot",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, linewidth=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, size=1.5) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness for Climate Adapatation with Regression Line",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, linewidth=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, size=1.5) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness with Regression Line",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
knitr::opts_chunk$set(echo = TRUE)
# Load all the packages needed here
library(tidyverse)
library(readr)
library(gt)
library(tufte)
library(sf)
library(feasts)
library(dplyr)
library(janitor)
library(ggplot2)
# Set the filepath here
rootdir <- ("/Users/lianechen/Documents/MEDS_2023/Fall_2023/EDS222/Final/eds222-climateadapt")
datadir <- file.path(rootdir,"data")
# Import data
city_indicators <- read.csv("data/City Indicators.csv")
readiness <- read.csv("data/Overall Risk & Readiness Scores.csv")
# Clean column names for both datasets
city_indicators <- clean_names(city_indicators)
readiness <- clean_names(readiness)
# Explore data
nrow(city_indicators)
nrow(readiness)
merged <- merge(city_indicators, readiness, by = "city", all = TRUE)
nrow(merged)
colnames(merged)[colnames(merged) == "geo_id.x"] <- "geo_id"
colnames(merged)[colnames(merged) == "state.x"] <- "state"
colnames(merged)[colnames(merged) == "latitutde"] <- "latitude"
income_readiness <- merged[, c("city", "state", "geo_id", "percent_of_population_spending_over_50_percent_of_income_on_rent_2015", "percent_of_population_in_poverty_2015", "latitude", "longitude", "county", "region", "median_income", "overall_readiness")]
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, size=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, linewidth=1.5) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness with Regression Line",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
# Compute the correlation coefficient to quantify the strength and direction of the relationship
cor(income_readiness$percent_of_population_in_poverty_2015, income_readiness$overall_readiness)
# Linear regression model
linear_regression <- lm(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
# Summary of the model
summary(linear_regression)
# Hypothesis testing
summary(linear_regression)$coefficients
# compute point estimate
pt_est_poverty_west = income_readiness %>%
filter(region == "West") %>%
summarize(mean(percent_of_population_in_poverty_2015))
pt_est_poverty_south = income_readiness %>%
filter(region == "South") %>%
summarize(mean(percent_of_population_in_poverty_2015))
point_est = as.numeric(pt_est_poverty_west - pt_est_poverty_south)
print(point_est)
# compute standard error
n1 = income_readiness %>% filter(region == "West") %>% count()
n2 = income_readiness %>% filter(region == "South") %>% count()
s1 = income_readiness %>% filter(region == "West") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
s2 = income_readiness %>% filter(region == "South") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
SE = as.numeric(sqrt(s1^2/n1 + s2^2/n2))
print(SE)
# compute test statistic
zscore = (point_est - 0)/SE
print(zscore)
two_tailed <- t.test(income_readiness$overall_readiness[income_readiness$region=="West"], income_readiness$overall_readiness[income_readiness$region=="South"])
two_tailed
knitr::opts_chunk$set(echo = TRUE)
# Load all the packages needed
library(tidyverse)
library(readr)
library(gt)
library(tufte)
library(sf)
library(feasts)
library(dplyr)
library(janitor)
library(ggplot2)
# Set the filepath
rootdir <- ("/Users/lianechen/Documents/MEDS_2023/Fall_2023/EDS222/Final/eds222-climateadapt")
datadir <- file.path(rootdir,"data")
# Import data
city_indicators <- read.csv("data/City Indicators.csv")
readiness <- read.csv("data/Overall Risk & Readiness Scores.csv")
# Clean column names for both datasets
city_indicators <- clean_names(city_indicators)
readiness <- clean_names(readiness)
# Check number of observations for city_indicators file
nrow(city_indicators)
# Check number of observations for readiness file
nrow(readiness)
# Merge city_indicators and readiness files by city name
merged <- merge(city_indicators, readiness, by = "city", all = TRUE)
# check that number of obersvations is consistent
nrow(merged)
# clean column names
colnames(merged)[colnames(merged) == "geo_id.x"] <- "geo_id"
colnames(merged)[colnames(merged) == "state.x"] <- "state"
colnames(merged)[colnames(merged) == "latitutde"] <- "latitude"
# streamline the columns so only relevant ones are kept
income_readiness <- merged[, c("city", "state", "geo_id", "percent_of_population_spending_over_50_percent_of_income_on_rent_2015", "percent_of_population_in_poverty_2015", "latitude", "longitude", "county", "region", "median_income", "overall_readiness")]
# create scatter plot with simple regression line included
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, size=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, linewidth=1.5) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness with Regression Line",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
# Compute the correlation coefficient to quantify the strength and direction of the relationship between poverty and climate readiness
cor(income_readiness$percent_of_population_in_poverty_2015, income_readiness$overall_readiness)
# Linear regression model
linear_regression <- lm(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
# Summary of the model
summary(linear_regression)
# Hypothesis testing
summary(linear_regression)$coefficients
# compute point estimate
pt_est_poverty_west = income_readiness %>%
filter(region == "West") %>%
summarize(mean(percent_of_population_in_poverty_2015))
pt_est_poverty_south = income_readiness %>%
filter(region == "South") %>%
summarize(mean(percent_of_population_in_poverty_2015))
point_est = as.numeric(pt_est_poverty_west - pt_est_poverty_south)
print(point_est)
# compute standard error
n1 = income_readiness %>% filter(region == "West") %>% count()
n2 = income_readiness %>% filter(region == "South") %>% count()
s1 = income_readiness %>% filter(region == "West") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
s2 = income_readiness %>% filter(region == "South") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
SE = as.numeric(sqrt(s1^2/n1 + s2^2/n2))
print(SE)
# compute test statistic
zscore = (point_est - 0)/SE
print(zscore)
two_tailed <- t.test(income_readiness$overall_readiness[income_readiness$region=="West"], income_readiness$overall_readiness[income_readiness$region=="South"])
two_tailed
res <- residuals(income_readiness)
geom_histogram(aes(res), bins=25)+ theme_classic()
res <- residuals(income_readiness)
ggplot(data=income_readiness) + geom_histogram(aes(res), bins=25)+ theme_classic()
# create scatter plot with simple regression line included
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, size=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, linewidth=1.5) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness with Regression Line",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
