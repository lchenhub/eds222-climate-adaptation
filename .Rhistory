CI_lower_3 <- linear_model$coefficients["Frost", "Estimate"] - (critical_value_3 * linear_model$coefficients["Frost", "Std. Error"])
print(paste0("90% confidence interval is [", CI_lower_3, ",", CI_upper_3, "]"))
#load the dataset and transform into tsibble
monthly_deaths <- datasets::mdeaths
monthly_deaths <- as_tsibble(monthly_deaths)
monthly_deaths
#make time series plot
monthly_deaths %>%
autoplot(vars = NULL, color = 'orange') +
theme_bw() +
labs(x = "Months",
y = "Deaths",
title = "Monthly deaths between 1974-1979")
#monthly_deaths <- as_tibble(monthly_deaths)
monthly_deaths %>%
model(classical_decomposition(value, type = "additive")) %>%
components() %>%
autoplot() +
labs(x = "year", y = "Number of deaths", title = "Classical decomposition of monthly male lung disease related deaths") +
theme_minimal()
acf(monthly_deaths, lag.max = 12)
View(income_readiness)
View(income_readiness)
# compute point estimate
pt_est_poverty_west = income_readiness %>%
filter(region == "West") %>%
summarize(mean(percent_of_population_in_poverty_2015))
pt_est_poverty_south = income_readiness %>%
filter(region == "South") %>%
summarize(mean(percent_of_population_in_poverty_2015))
point_est = as.numeric(pt_est_poverty_west - pt_est_poverty_south)
print(point_est)
# compute standard error
n1 = income_readiness %>% filter(region == "West") %>% count()
n2 = income_readiness %>% filter(region == "South") %>% count()
s1 = income_readiness %>% filter(region == "West") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
s2 = income_readiness %>% filter(region == "South") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
SE = as.numeric(sqrt(s1^2/n1 + s2^2/n2))
print(SE)
# compute test statistic
zscore = (point_est - 0)/SE
print(zscore)
#t-test
t.test(income_readiness ~ percent_of_population_in_poverty, data = income_readiness)
#t-test
t.test(income_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
#t-test
t.test(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
#t-test
t.test(overall_readiness, percent_of_population_in_poverty_2015, data = income_readiness)
#t-test
t.test(overall_readiness,percent_of_population_in_poverty_2015, data = income_readiness)
#t-test
t.test(overall_readiness,percent_of_population_in_poverty_2015, data = income_readiness, paired=T)
#t-test
t.test(overall_readiness , percent_of_population_in_poverty_2015, data = income_readiness, paired=T)
#t-test
t.test(overall_readiness, percent_of_population_in_poverty_2015, data = income_readiness, paired=T)
#t-test
t.test(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
two_tailed <- t.test(income_readiness$overall_readiness[income_readiness$region=="West"], overall_readiness[income_readiness$region=="South"])
two_tailed <- t.test(income_readiness$overall_readiness[income_readiness$region=="West"], income_readiness$overall_readiness[income_readiness$region=="South"])
two_tailed
library(ggplot2)
# plot a histogram using ggplot
ggplot(income_readiness, aes(x=percent_of_population_in_poverty_2015, fill=overall_readiness, color=overall_readiness)) +
geom_histogram(position="identity")
knitr::opts_chunk$set(echo = TRUE)
# Load all the packages needed here
library(tidyverse)
library(readr)
library(gt)
library(tufte)
library(sf)
library(feasts)
library(dplyr)
library(janitor)
library(ggplot2)
# Set the filepath here
rootdir <- ("/Users/lianechen/Documents/MEDS_2023/Fall_2023/EDS222/Final/eds222-climateadapt")
datadir <- file.path(rootdir,"data")
# Import data
city_indicators <- read.csv("data/City Indicators.csv")
readiness <- read.csv("data/Overall Risk & Readiness Scores.csv")
# Clean column names for both datasets
city_indicators <- clean_names(city_indicators)
readiness <- clean_names(readiness)
# Explore data
nrow(city_indicators)
nrow(readiness)
merged <- merge(city_indicators, readiness, by = "city", all = TRUE)
nrow(merged)
colnames(merged)[colnames(merged) == "geo_id.x"] <- "geo_id"
colnames(merged)[colnames(merged) == "state.x"] <- "state"
colnames(merged)[colnames(merged) == "latitutde"] <- "latitude"
income_readiness <- merged[, c("city", "state", "geo_id", "percent_of_population_spending_over_50_percent_of_income_on_rent_2015", "percent_of_population_in_poverty_2015", "latitude", "longitude", "county", "region", "median_income", "overall_readiness")]
#create scatterplot to understand information
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(size=3) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness for Climate Adapatation",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
# Compute the correlation coefficient to quantify the strength and direction of the relationship
cor(income_readiness$percent_of_population_in_poverty_2015, income_readiness$overall_readiness)
# Linear regression model
linear_regression <- lm(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
# Summary of the model
summary(linear_regression)
# compute point estimate
pt_est_poverty_west = income_readiness %>%
filter(region == "West") %>%
summarize(mean(percent_of_population_in_poverty_2015))
pt_est_poverty_south = income_readiness %>%
filter(region == "South") %>%
summarize(mean(percent_of_population_in_poverty_2015))
point_est = as.numeric(pt_est_poverty_west - pt_est_poverty_south)
print(point_est)
# compute standard error
n1 = income_readiness %>% filter(region == "West") %>% count()
n2 = income_readiness %>% filter(region == "South") %>% count()
s1 = income_readiness %>% filter(region == "West") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
s2 = income_readiness %>% filter(region == "South") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
SE = as.numeric(sqrt(s1^2/n1 + s2^2/n2))
print(SE)
# compute test statistic
zscore = (point_est - 0)/SE
print(zscore)
#t-test
t.test(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
two_tailed <- t.test(income_readiness$overall_readiness[income_readiness$region=="West"], income_readiness$overall_readiness[income_readiness$region=="South"])
two_tailed
ggplot(data=linear_regression, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, linewidth=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, size=1.5) +
theme_bw() +
labs(title = "Regression line overlaid on scatter plot",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
qqline(income_readiness$overall_readiness)
View(income_readiness)
knitr::opts_chunk$set(echo = TRUE)
# Load all the packages needed here
library(tidyverse)
library(readr)
library(gt)
library(tufte)
library(sf)
library(feasts)
library(dplyr)
library(janitor)
library(ggplot2)
# Set the filepath here
rootdir <- ("/Users/lianechen/Documents/MEDS_2023/Fall_2023/EDS222/Final/eds222-climateadapt")
datadir <- file.path(rootdir,"data")
# Import data
city_indicators <- read.csv("data/City Indicators.csv")
readiness <- read.csv("data/Overall Risk & Readiness Scores.csv")
# Clean column names for both datasets
city_indicators <- clean_names(city_indicators)
readiness <- clean_names(readiness)
# Explore data
nrow(city_indicators)
nrow(readiness)
merged <- merge(city_indicators, readiness, by = "city", all = TRUE)
nrow(merged)
colnames(merged)[colnames(merged) == "geo_id.x"] <- "geo_id"
colnames(merged)[colnames(merged) == "state.x"] <- "state"
colnames(merged)[colnames(merged) == "latitutde"] <- "latitude"
income_readiness <- merged[, c("city", "state", "geo_id", "percent_of_population_spending_over_50_percent_of_income_on_rent_2015", "percent_of_population_in_poverty_2015", "latitude", "longitude", "county", "region", "median_income", "overall_readiness")]
#create scatterplot to understand information
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(size=3) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness for Climate Adapatation",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
# Compute the correlation coefficient to quantify the strength and direction of the relationship
cor(income_readiness$percent_of_population_in_poverty_2015, income_readiness$overall_readiness)
# Linear regression model
linear_regression <- lm(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
# Summary of the model
summary(linear_regression)
# compute point estimate
pt_est_poverty_west = income_readiness %>%
filter(region == "West") %>%
summarize(mean(percent_of_population_in_poverty_2015))
pt_est_poverty_south = income_readiness %>%
filter(region == "South") %>%
summarize(mean(percent_of_population_in_poverty_2015))
point_est = as.numeric(pt_est_poverty_west - pt_est_poverty_south)
print(point_est)
# compute standard error
n1 = income_readiness %>% filter(region == "West") %>% count()
n2 = income_readiness %>% filter(region == "South") %>% count()
s1 = income_readiness %>% filter(region == "West") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
s2 = income_readiness %>% filter(region == "South") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
SE = as.numeric(sqrt(s1^2/n1 + s2^2/n2))
print(SE)
# compute test statistic
zscore = (point_est - 0)/SE
print(zscore)
#t-test
t.test(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
ggplot(data=linear_regression, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, linewidth=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, size=1.5) +
theme_bw() +
labs(title = "Regression line overlaid on scatter plot",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, linewidth=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, size=1.5) +
theme_bw() +
labs(title = "Regression line overlaid on scatter plot",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, linewidth=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, size=1.5) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness for Climate Adapatation with Regression Line",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, linewidth=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, size=1.5) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness with Regression Line",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
knitr::opts_chunk$set(echo = TRUE)
# Load all the packages needed here
library(tidyverse)
library(readr)
library(gt)
library(tufte)
library(sf)
library(feasts)
library(dplyr)
library(janitor)
library(ggplot2)
# Set the filepath here
rootdir <- ("/Users/lianechen/Documents/MEDS_2023/Fall_2023/EDS222/Final/eds222-climateadapt")
datadir <- file.path(rootdir,"data")
# Import data
city_indicators <- read.csv("data/City Indicators.csv")
readiness <- read.csv("data/Overall Risk & Readiness Scores.csv")
# Clean column names for both datasets
city_indicators <- clean_names(city_indicators)
readiness <- clean_names(readiness)
# Explore data
nrow(city_indicators)
nrow(readiness)
merged <- merge(city_indicators, readiness, by = "city", all = TRUE)
nrow(merged)
colnames(merged)[colnames(merged) == "geo_id.x"] <- "geo_id"
colnames(merged)[colnames(merged) == "state.x"] <- "state"
colnames(merged)[colnames(merged) == "latitutde"] <- "latitude"
income_readiness <- merged[, c("city", "state", "geo_id", "percent_of_population_spending_over_50_percent_of_income_on_rent_2015", "percent_of_population_in_poverty_2015", "latitude", "longitude", "county", "region", "median_income", "overall_readiness")]
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, size=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, linewidth=1.5) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness with Regression Line",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
# Compute the correlation coefficient to quantify the strength and direction of the relationship
cor(income_readiness$percent_of_population_in_poverty_2015, income_readiness$overall_readiness)
# Linear regression model
linear_regression <- lm(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
# Summary of the model
summary(linear_regression)
# Hypothesis testing
summary(linear_regression)$coefficients
# compute point estimate
pt_est_poverty_west = income_readiness %>%
filter(region == "West") %>%
summarize(mean(percent_of_population_in_poverty_2015))
pt_est_poverty_south = income_readiness %>%
filter(region == "South") %>%
summarize(mean(percent_of_population_in_poverty_2015))
point_est = as.numeric(pt_est_poverty_west - pt_est_poverty_south)
print(point_est)
# compute standard error
n1 = income_readiness %>% filter(region == "West") %>% count()
n2 = income_readiness %>% filter(region == "South") %>% count()
s1 = income_readiness %>% filter(region == "West") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
s2 = income_readiness %>% filter(region == "South") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
SE = as.numeric(sqrt(s1^2/n1 + s2^2/n2))
print(SE)
# compute test statistic
zscore = (point_est - 0)/SE
print(zscore)
two_tailed <- t.test(income_readiness$overall_readiness[income_readiness$region=="West"], income_readiness$overall_readiness[income_readiness$region=="South"])
two_tailed
knitr::opts_chunk$set(echo = TRUE)
# Load all the packages needed
library(tidyverse)
library(readr)
library(gt)
library(tufte)
library(sf)
library(feasts)
library(dplyr)
library(janitor)
library(ggplot2)
# Set the filepath
rootdir <- ("/Users/lianechen/Documents/MEDS_2023/Fall_2023/EDS222/Final/eds222-climateadapt")
datadir <- file.path(rootdir,"data")
# Import data
city_indicators <- read.csv("data/City Indicators.csv")
readiness <- read.csv("data/Overall Risk & Readiness Scores.csv")
# Clean column names for both datasets
city_indicators <- clean_names(city_indicators)
readiness <- clean_names(readiness)
# Check number of observations for city_indicators file
nrow(city_indicators)
# Check number of observations for readiness file
nrow(readiness)
# Merge city_indicators and readiness files by city name
merged <- merge(city_indicators, readiness, by = "city", all = TRUE)
# check that number of obersvations is consistent
nrow(merged)
# clean column names
colnames(merged)[colnames(merged) == "geo_id.x"] <- "geo_id"
colnames(merged)[colnames(merged) == "state.x"] <- "state"
colnames(merged)[colnames(merged) == "latitutde"] <- "latitude"
# streamline the columns so only relevant ones are kept
income_readiness <- merged[, c("city", "state", "geo_id", "percent_of_population_spending_over_50_percent_of_income_on_rent_2015", "percent_of_population_in_poverty_2015", "latitude", "longitude", "county", "region", "median_income", "overall_readiness")]
# create scatter plot with simple regression line included
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, size=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, linewidth=1.5) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness with Regression Line",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
# Compute the correlation coefficient to quantify the strength and direction of the relationship between poverty and climate readiness
cor(income_readiness$percent_of_population_in_poverty_2015, income_readiness$overall_readiness)
# Linear regression model
linear_regression <- lm(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
# Summary of the model
summary(linear_regression)
# Hypothesis testing
summary(linear_regression)$coefficients
# compute point estimate
pt_est_poverty_west = income_readiness %>%
filter(region == "West") %>%
summarize(mean(percent_of_population_in_poverty_2015))
pt_est_poverty_south = income_readiness %>%
filter(region == "South") %>%
summarize(mean(percent_of_population_in_poverty_2015))
point_est = as.numeric(pt_est_poverty_west - pt_est_poverty_south)
print(point_est)
# compute standard error
n1 = income_readiness %>% filter(region == "West") %>% count()
n2 = income_readiness %>% filter(region == "South") %>% count()
s1 = income_readiness %>% filter(region == "West") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
s2 = income_readiness %>% filter(region == "South") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
SE = as.numeric(sqrt(s1^2/n1 + s2^2/n2))
print(SE)
# compute test statistic
zscore = (point_est - 0)/SE
print(zscore)
two_tailed <- t.test(income_readiness$overall_readiness[income_readiness$region=="West"], income_readiness$overall_readiness[income_readiness$region=="South"])
two_tailed
res <- residuals(income_readiness)
geom_histogram(aes(res), bins=25)+ theme_classic()
res <- residuals(income_readiness)
ggplot(data=income_readiness) + geom_histogram(aes(res), bins=25)+ theme_classic()
# create scatter plot with simple regression line included
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, size=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, linewidth=1.5) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness with Regression Line",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
knitr::opts_chunk$set(echo = TRUE)
# Load all the packages needed
library(tidyverse)
library(readr)
library(gt)
library(tufte)
library(sf)
library(feasts)
library(dplyr)
library(janitor)
library(ggplot2)
# Set the filepath
rootdir <- ("/Users/lianechen/Documents/MEDS_2023/Fall_2023/EDS222/Final/eds222-climateadapt")
datadir <- file.path(rootdir,"data")
# Import data
city_indicators <- read.csv("data/City Indicators.csv")
readiness <- read.csv("data/Overall Risk & Readiness Scores.csv")
# Clean column names for both datasets
city_indicators <- clean_names(city_indicators)
readiness <- clean_names(readiness)
# Check number of observations for city_indicators file
nrow(city_indicators)
# Check number of observations for readiness file
nrow(readiness)
# Merge city_indicators and readiness files by city name
merged <- merge(city_indicators, readiness, by = "city", all = TRUE)
# check that number of obersvations is consistent
nrow(merged)
# clean column names
colnames(merged)[colnames(merged) == "geo_id.x"] <- "geo_id"
colnames(merged)[colnames(merged) == "state.x"] <- "state"
colnames(merged)[colnames(merged) == "latitutde"] <- "latitude"
# streamline the columns so only relevant ones are kept
income_readiness <- merged[, c("city", "state", "geo_id", "percent_of_population_spending_over_50_percent_of_income_on_rent_2015", "percent_of_population_in_poverty_2015", "latitude", "longitude", "county", "region", "median_income", "overall_readiness")]
# create scatter plot with simple regression line included
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, size=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, linewidth=1.5) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness with Regression Line",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
# Compute the correlation coefficient to quantify the strength and direction of the relationship between poverty and climate readiness
cor(income_readiness$percent_of_population_in_poverty_2015, income_readiness$overall_readiness)
# Linear regression model
linear_regression <- lm(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
# Summary of the model
summary(linear_regression)
# Hypothesis testing
summary(linear_regression)$coefficients
# compute point estimate
pt_est_poverty_west = income_readiness %>%
filter(region == "West") %>%
summarize(mean(percent_of_population_in_poverty_2015))
pt_est_poverty_south = income_readiness %>%
filter(region == "South") %>%
summarize(mean(percent_of_population_in_poverty_2015))
point_est = as.numeric(pt_est_poverty_west - pt_est_poverty_south)
print(point_est)
# compute standard error
n1 = income_readiness %>% filter(region == "West") %>% count()
n2 = income_readiness %>% filter(region == "South") %>% count()
s1 = income_readiness %>% filter(region == "West") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
s2 = income_readiness %>% filter(region == "South") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
SE = as.numeric(sqrt(s1^2/n1 + s2^2/n2))
print(SE)
# compute test statistic
zscore = (point_est - 0)/SE
print(zscore)
two_tailed <- t.test(income_readiness$overall_readiness[income_readiness$region=="West"], income_readiness$overall_readiness[income_readiness$region=="South"])
two_tailed
knitr::opts_chunk$set(echo = TRUE)
# Load all the packages needed
library(tidyverse)
library(readr)
library(gt)
library(tufte)
library(sf)
library(feasts)
library(dplyr)
library(janitor)
library(ggplot2)
# Set the filepath
rootdir <- ("/Users/lianechen/Documents/MEDS_2023/Fall_2023/EDS222/Final/eds222-climateadapt")
datadir <- file.path(rootdir,"data")
# import data
city_indicators <- read.csv("data/City Indicators.csv")
readiness <- read.csv("data/Overall Risk & Readiness Scores.csv")
# clean column names for both datasets
city_indicators <- clean_names(city_indicators)
readiness <- clean_names(readiness)
# check number of observations for city_indicators file
nrow(city_indicators)
# check number of observations for readiness file
nrow(readiness)
# merge city_indicators and readiness files by city name
merged <- merge(city_indicators, readiness, by = "city", all = TRUE)
# check that number of obersvations is consistent
nrow(merged)
# clean column names
colnames(merged)[colnames(merged) == "geo_id.x"] <- "geo_id"
colnames(merged)[colnames(merged) == "state.x"] <- "state"
colnames(merged)[colnames(merged) == "latitutde"] <- "latitude"
# streamline the columns so only relevant ones are kept
income_readiness <- merged[, c("city", "state", "geo_id", "percent_of_population_spending_over_50_percent_of_income_on_rent_2015", "percent_of_population_in_poverty_2015", "latitude", "longitude", "county", "region", "median_income", "overall_readiness")]
# create scatter plot with simple regression line included
ggplot(data=income_readiness, aes(x=percent_of_population_in_poverty_2015, y = overall_readiness)) +
geom_point(alpha=0.1, size=3) +
geom_smooth(method='lm', formula= y~x, color="lightcoral", se=F, linewidth=1.5) +
theme_bw() +
labs(title = "Scatterplot of % in Poverty vs Overall Readiness with Regression Line",
x = "Percent of population in poverty (2015)", y = "Overall readiness")
# Compute the correlation coefficient to quantify the strength and direction of the relationship between poverty and climate readiness
cor(income_readiness$percent_of_population_in_poverty_2015, income_readiness$overall_readiness)
# linear regression model
linear_regression <- lm(overall_readiness ~ percent_of_population_in_poverty_2015, data = income_readiness)
# summary of the model
summary(linear_regression)
# let's look at coefficients
summary(linear_regression)$coefficients
# compute point estimate
pt_est_poverty_west = income_readiness %>%
filter(region == "West") %>%
summarize(mean(percent_of_population_in_poverty_2015))
pt_est_poverty_south = income_readiness %>%
filter(region == "South") %>%
summarize(mean(percent_of_population_in_poverty_2015))
point_est = as.numeric(pt_est_poverty_west - pt_est_poverty_south)
print(point_est)
# compute standard error
n1 = income_readiness %>% filter(region == "West") %>% count()
n2 = income_readiness %>% filter(region == "South") %>% count()
s1 = income_readiness %>% filter(region == "West") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
s2 = income_readiness %>% filter(region == "South") %>% summarize(sd(percent_of_population_in_poverty_2015, na.rm = TRUE))
SE = as.numeric(sqrt(s1^2/n1 + s2^2/n2))
print(SE)
# compute test statistic
zscore = (point_est - 0)/SE
print(zscore)
#construct two-tailed t-test
two_tailed <- t.test(income_readiness$overall_readiness[income_readiness$region=="West"], income_readiness$overall_readiness[income_readiness$region=="South"])
#print
two_tailed
